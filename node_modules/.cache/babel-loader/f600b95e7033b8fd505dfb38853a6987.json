{"ast":null,"code":"var _jsxFileName = \"/Users/upstox/atm-api-frontend/src/Components/TransactionDetails.js\";\nimport React from 'react';\nimport { fetchTransactionDetailsApi } from \"./Utils\";\nimport { Table } from \"reactstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TransactionDetails extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      accountNumber: window.localStorage.getItem('accountNumber'),\n      records: []\n    };\n  }\n\n  componentDidMount() {\n    fetchTransactionDetailsApi(this.state.accountNumber).then(data => {\n      console.log(data);\n      this.setState({\n        records: data.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const columns = [{\n      dataField: \"time\",\n      text: \"Date\"\n    }, {\n      dataField: \"transDetails\",\n      text: \"Details\"\n    }, {\n      dataField: \"debit\",\n      text: \"Debit\"\n    }, {\n      dataField: \"credit\",\n      text: \"Credit\"\n    }, {\n      dataField: \"amount\",\n      text: \"Amount(₹)\"\n    }, {\n      dataField: \"totalBalance\",\n      text: \"Total Balance(₹)\"\n    }];\n    var recordsList = this.state.records.map(function (i) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.transDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.debit === 'debit' ? `₹ ${i.amount}` : \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: i.credit === 'credit' ? `₹ ${i.amount}` : \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: `₹ ${i.totalBalance}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Details \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Debit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Credit \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Total balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TransactionDetails;","map":{"version":3,"sources":["/Users/upstox/atm-api-frontend/src/Components/TransactionDetails.js"],"names":["React","fetchTransactionDetailsApi","Table","BootstrapTable","paginationFactory","ReactBootStrap","TransactionDetails","Component","constructor","state","accountNumber","window","localStorage","getItem","records","componentDidMount","then","data","console","log","setState","catch","error","render","columns","dataField","text","recordsList","map","i","time","transDetails","debit","amount","credit","totalBalance"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {fetchTransactionDetailsApi} from \"./Utils\";\nimport {Table} from \"reactstrap\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootStrap from \"react-bootstrap\";\n\n\nclass TransactionDetails extends React.Component{\n\n    constructor() {\n        super();\n        this.state={\n            accountNumber:window.localStorage.getItem('accountNumber'),\n            records:[]\n        }\n    }\n    componentDidMount() {\n\n            fetchTransactionDetailsApi(this.state.accountNumber).then((data) =>{\n                console.log(data)\n                this.setState({records:data.data})\n            }).catch((error) =>{\n                console.log(error)\n            })\n    }\n\n    render()\n    {\n\n        const columns=[\n            {dataField: \"time\",text:\"Date\"},\n            {dataField: \"transDetails\",text:\"Details\"},\n            {dataField: \"debit\",text:\"Debit\"},\n            {dataField: \"credit\",text:\"Credit\"},\n            {dataField: \"amount\",text: \"Amount(₹)\"},\n            {dataField: \"totalBalance\",text:\"Total Balance(₹)\"},\n        ]\n        var recordsList=this.state.records.map(function (i){\n            return(\n                <tr>\n                    <td>{i.time}</td>\n                    <td>{i.transDetails}</td>\n                    <td>{i.debit==='debit'?`₹ ${i.amount}`:\"-\"}</td>\n                    <td>{i.credit==='credit'?`₹ ${i.amount}`:\"-\"}</td>\n\n                    <td>{`₹ ${i.totalBalance}`}</td>\n                </tr>\n            )\n        })\n\n\n        return(\n            <Table bordered>\n                <thead>\n                <tr>\n                    <th>Date</th>\n                    <th >Details </th>\n                    <th> Debit </th>\n                    <th> Credit </th>\n                    <th> Total balance</th>\n                </tr>\n                </thead>\n\n                <tbody>\n                {recordsList}\n                </tbody>\n            </Table>\n\n        );\n    }\n\n}\n\nexport default TransactionDetails;"]},"metadata":{},"sourceType":"module"}